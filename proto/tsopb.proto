syntax = "proto3";
package tsopb;

import "pdpb.proto";

import "gogoproto/gogo.proto";
import "rustproto.proto";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (rustproto.lite_runtime_all) = true;

option java_package = "org.tikv.kvproto";

// Define independent TSO service
service TSO {
    // Below defines the rpcs existed in PD service and reuse pdpb TSO messages
    // for better back-compatability. The Request/Response Header of pdpb TSO
    // messages contains keyspace and keyspace group info to support multi-tenant.

    // GetMembers get the member list of this cluster. It does not require the
    // cluster_id inrequest matchs the id of this cluster. If the server side
    // supports multi-tenant, this rpc only returns the cluster membership info.
    rpc GetMembers(pdpb.GetMembersRequest) returns (pdpb.GetMembersResponse) {}

    rpc Tso(stream pdpb.TsoRequest) returns (stream pdpb.TsoResponse) {}

    rpc SyncMaxTS(pdpb.SyncMaxTSRequest) returns (pdpb.SyncMaxTSResponse) {}

    rpc GetDCLocationInfo(pdpb.GetDCLocationInfoRequest) returns (pdpb.GetDCLocationInfoResponse) {}

    rpc SetExternalTimestamp(pdpb.SetExternalTimestampRequest) returns (pdpb.SetExternalTimestampResponse) {}

    rpc GetExternalTimestamp(pdpb.GetExternalTimestampRequest) returns (pdpb.GetExternalTimestampResponse) {}

    // Add the extended multi-tenant rpcs below.
}
